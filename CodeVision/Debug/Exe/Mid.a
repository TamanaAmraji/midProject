;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;// Declare your global variables here
;int LCD_ref=0xEF, i=0, digit[2];
;    int row = -1, col =-1, input = -1;
;#define col0    PINA.4
;#define col1    PINA.5
;#define col2    PINA.6
;#define col3    PINA.7
;
;    const int segments[] =
;     {
;        // 0bGFEDCBA
;        0x40, // 0
;        0x79, // 1
;        0x24, // 2
;        0x30, // 3
;        0x19, // 4
;        0x12, // 5
;        0x02, // 6
;        0x78, // 7
;        0x00, // 8
;        0x10 // 9
;    };
;
;    char row_ref[]= {
;            0b00000001,
;            0b00000010,
;            0b00000100,
;            0b00001000
;            };

	.DSEG
;
;// Function prototypes
;void display_on_seven_segment(int number);
;//int read_keypad();
;// Timer 0 output compare interrupt service routine
;interrupt [TIM0_COMP] void timer0_comp_isr(void)
; 0000 0026 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0027 // Place your code here
; 0000 0028 //    PORTB = LCD_ref;
; 0000 0029 //    LCD_ref = LCD_ref<<1;
; 0000 002A //    i++;
; 0000 002B //    if (i == 4)
; 0000 002C //    {
; 0000 002D //        i = 0;
; 0000 002E //        LCD_ref = 0xEF;
; 0000 002F //    }
; 0000 0030 //
; 0000 0031 
; 0000 0032      // while(1){
; 0000 0033         PINA.0=0;PINA.1=1;PINA.2=1;PINA.3=1;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 0034               if(col0 == 0)
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 0035                {
; 0000 0036                   while(col0 == 0);
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 0037                   input = 7;
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 0038                   //break;
; 0000 0039                }
; 0000 003A               if(col1 == 0)
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 003B                {
; 0000 003C                   while(col1 == 0);
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 003D                   input = 8;
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 003E                   //break;
; 0000 003F                }
; 0000 0040                if(col2 == 0)
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0041                {
; 0000 0042                   while(col2 == 0);
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 0043                   input = 9;
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 0044                //   break;
; 0000 0045                }
; 0000 0046               if(col3 == 0)
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 0047                {
; 0000 0048                   while(col3 == 0);
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 0049                   input = 10; // /
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 004A                 //  break;
; 0000 004B                }
; 0000 004C 
; 0000 004D         PINA.0=1;PINA.1=0;PINA.2=1;PINA.3=1;
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 004E         if(col0 == 0)
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 004F                {
; 0000 0050                   while(col0 == 0);
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 0051                   input = 4;
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 0052                 //  break;
; 0000 0053                }
; 0000 0054               if(col1 == 0)
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 0055                {
; 0000 0056                   while(col1 == 0);
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 0057                   input = 5;
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 0058                 //  break;
; 0000 0059                }
; 0000 005A                if(col2 == 0)
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 005B                {
; 0000 005C                   while(col2 == 0);
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0000 005D                   PORTC= ~(0x02);
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0000 005E                   //input = 6;
; 0000 005F                 //  break;
; 0000 0060                }
; 0000 0061               if(col3 == 0)
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0000 0062                {
; 0000 0063                   while(col3 == 0);
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
; 0000 0064                   input = 11; // x
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 0065                 //  break;
; 0000 0066                }
; 0000 0067 
; 0000 0068         PINA.0=1;PINA.1=1;PINA.2=0;PINA.3=1;
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0000 0069         if(col0 == 0)
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0000 006A                {
; 0000 006B                   while(col0 == 0);
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
; 0000 006C                   input = 1;
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
; 0000 006D                 //  break;
; 0000 006E                }
; 0000 006F               if(col1 == 0)
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
; 0000 0070                {
; 0000 0071                   while(col1 == 0);
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
; 0000 0072                   input = 2;
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
; 0000 0073                //   break;
; 0000 0074                }
; 0000 0075                if(col2 == 0)
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
; 0000 0076                {
; 0000 0077                   while(col2 == 0);
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
; 0000 0078                   input = 3;
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
; 0000 0079                //   break;
; 0000 007A                }
; 0000 007B               if(col3 == 0)
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
; 0000 007C                {
; 0000 007D                   while(col3 == 0);
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
; 0000 007E                   input = 12; // -
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
; 0000 007F                //   break;
; 0000 0080                }
; 0000 0081 
; 0000 0082         PINA.0=1;PINA.1=1;PINA.2=1;PINA.3=0;
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
; 0000 0083         if(col0 == 0)
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
; 0000 0084                {
; 0000 0085                   while(col0 == 0);
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
; 0000 0086                   input = 13; // C/ON
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
; 0000 0087                 //  break;
; 0000 0088                }
; 0000 0089               if(col1 == 0)
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
; 0000 008A                {
; 0000 008B                   while(col1 == 0);
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
; 0000 008C                   input = 0;
;PCODE: $000000D4 VOL: 0
; 0000 008D                 //  break;
; 0000 008E                }
; 0000 008F                if(col2 == 0)
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
; 0000 0090                {
; 0000 0091                   while(col2 == 0);
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
; 0000 0092                   input = 14;  //=
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
; 0000 0093                 //  break;
; 0000 0094                }
; 0000 0095               if(col3 == 0)
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
; 0000 0096                {
; 0000 0097                   while(col3 == 0);
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
; 0000 0098                   input = 15; // +
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
; 0000 0099                //   break;
; 0000 009A                }
; 0000 009B              // }
; 0000 009C 
; 0000 009D 
; 0000 009E }
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;
;// Timer2 output compare interrupt service routine
;interrupt [TIM2_COMP] void timer2_comp_isr(void)     //segment refresh
; 0000 00A2 {
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
; 0000 00A3 // Place your code here
; 0000 00A4 
; 0000 00A5   PINA.0=1;
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
; 0000 00A6     while(1){
;PCODE: $000000F5 VOL: 0
; 0000 00A7         PINA.0=0;PINA.1=1;PINA.2=1;PINA.3=1;
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
; 0000 00A8               if(col0 == 0)
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
; 0000 00A9                {
; 0000 00AA                   //while(col0 == 0);
; 0000 00AB                   input = 7;
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
; 0000 00AC                   //break;
; 0000 00AD                }
; 0000 00AE               if(col1 == 0)
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
; 0000 00AF                {
; 0000 00B0                   //while(col1 == 0);
; 0000 00B1                   input = 8;
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
; 0000 00B2                   //break;
; 0000 00B3                }
; 0000 00B4                if(col2 == 0)
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
; 0000 00B5                {
; 0000 00B6                   while(col2 == 0);
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
; 0000 00B7                   input = 9;
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
; 0000 00B8                   break;
;PCODE: $00000115 VOL: 0
; 0000 00B9                }
; 0000 00BA               if(col3 == 0)
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
; 0000 00BB                {
; 0000 00BC                   while(col3 == 0);
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
; 0000 00BD                   input = 10; // /
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
; 0000 00BE                   break;
;PCODE: $00000122 VOL: 0
; 0000 00BF                }
; 0000 00C0 
; 0000 00C1         PINA.0=1;PINA.1=0;PINA.2=1;PINA.3=1;
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
; 0000 00C2         if(col0 == 0)
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
; 0000 00C3                {
; 0000 00C4                   while(col0 == 0);
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
; 0000 00C5                   input = 4;
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
; 0000 00C6                   break;
;PCODE: $00000137 VOL: 0
; 0000 00C7                }
; 0000 00C8               if(col1 == 0)
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
; 0000 00C9                {
; 0000 00CA                   while(col1 == 0);
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
; 0000 00CB                   input = 5;
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
; 0000 00CC                   break;
;PCODE: $00000144 VOL: 0
; 0000 00CD                }
; 0000 00CE                if(col2 == 0)
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
; 0000 00CF                {
; 0000 00D0                   while(col2 == 0);
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
; 0000 00D1                   PORTC= ~(0x02);
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
; 0000 00D2                   //input = 6;
; 0000 00D3                   break;
;PCODE: $00000151 VOL: 0
; 0000 00D4                }
; 0000 00D5               if(col3 == 0)
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
; 0000 00D6                {
; 0000 00D7                   while(col3 == 0);
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
; 0000 00D8                   input = 11; // x
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
; 0000 00D9                   break;
;PCODE: $0000015E VOL: 0
; 0000 00DA                }
; 0000 00DB 
; 0000 00DC         PINA.0=1;PINA.1=1;PINA.2=0;PINA.3=1;
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
; 0000 00DD         if(col0 == 0)
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
; 0000 00DE                {
; 0000 00DF                   while(col0 == 0);
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
; 0000 00E0                   input = 1;
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
; 0000 00E1                   break;
;PCODE: $00000173 VOL: 0
; 0000 00E2                }
; 0000 00E3               if(col1 == 0)
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
; 0000 00E4                {
; 0000 00E5                   while(col1 == 0);
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
; 0000 00E6                   input = 2;
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
; 0000 00E7                   break;
;PCODE: $00000180 VOL: 0
; 0000 00E8                }
; 0000 00E9                if(col2 == 0)
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
; 0000 00EA                {
; 0000 00EB                   while(col2 == 0);
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
; 0000 00EC                   input = 3;
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
; 0000 00ED                   break;
;PCODE: $0000018D VOL: 0
; 0000 00EE                }
; 0000 00EF               if(col3 == 0)
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
; 0000 00F0                {
; 0000 00F1                   while(col3 == 0);
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
; 0000 00F2                   input = 12; // -
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
; 0000 00F3                   break;
;PCODE: $0000019A VOL: 0
; 0000 00F4                }
; 0000 00F5 
; 0000 00F6         PINA.0=1;PINA.1=1;PINA.2=1;PINA.3=0;
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
; 0000 00F7         if(col0 == 0)
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
; 0000 00F8                {
; 0000 00F9                   while(col0 == 0);
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
; 0000 00FA                   input = 13; // C/ON
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
; 0000 00FB                   break;
;PCODE: $000001AF VOL: 0
; 0000 00FC                }
; 0000 00FD               if(col1 == 0)
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
; 0000 00FE                {
; 0000 00FF                   while(col1 == 0);
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
; 0000 0100                   input = 0;
;PCODE: $000001BA VOL: 0
; 0000 0101                   break;
;PCODE: $000001BB VOL: 0
; 0000 0102                }
; 0000 0103                if(col2 == 0)
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
; 0000 0104                {
; 0000 0105                   while(col2 == 0);
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
; 0000 0106                   input = 14;  //=
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
; 0000 0107                   break;
;PCODE: $000001C8 VOL: 0
; 0000 0108                }
; 0000 0109               if(col3 == 0)
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
; 0000 010A                {
; 0000 010B                   while(col3 == 0);
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
; 0000 010C                   input = 15; // +
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
; 0000 010D                   break;
;PCODE: $000001D5 VOL: 0
; 0000 010E                }
; 0000 010F               }
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
; 0000 0110 
; 0000 0111 }
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
;
;void main(void)
; 0000 0114 {
;PCODE: $000001DC VOL: 0
; 0000 0115 // Declare your local variables here
; 0000 0116 int key;  int minutes = 0,seconds = 0;
; 0000 0117 
; 0000 0118     // Initialize ports and pins
; 0000 0119     // Configure SEVENSEG_PORT, KEYPAD_PORT, BUZZER_PORT, and LED_PORT as required
; 0000 011A 
; 0000 011B     // Set ROWS as outputs and COLS as inputs
; 0000 011C     //DDRA = 0x0F; // Assuming keypad is connected to PORTA pins 0-3 as ROWS
; 0000 011D     DDRB = 0xFF; // Assuming keypad is connected to PORTB pins 0-3 as COLS
;	key -> R16,R17
;	minutes -> R18,R19
;	seconds -> R20,R21
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
; 0000 011E     PORTB = 0x00; // Activate internal pull-ups on PORTB pins 0-3 as COLS
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
; 0000 011F     PORTA = 0x00; // Activate internal pull-ups on PORTA pins 0-3 as ROWS
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
; 0000 0120     DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (1<<DDA3) | (1<<DDA2) | (1<<DDA1) | (1<<DDA0);;
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
; 0000 0121     DDRC = 0xFF; // Assuming seven segment display is connected to PORTC
;PCODE: $000001E9 VOL: 0
;PCODE: $000001EA VOL: 0
; 0000 0122     DDRD = 0xFF; // Assuming LEDs are connected to PORTD
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
; 0000 0123 
; 0000 0124 
; 0000 0125 // Timer/Counter 0 initialization
; 0000 0126 // Clock source: System Clock
; 0000 0127 // Clock value: 7.813 kHz
; 0000 0128 // Mode: CTC top=OCR0
; 0000 0129 // OC0 output: Disconnected
; 0000 012A // Timer Period: 9.984 ms
; 0000 012B TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (1<<WGM01) | (1<<CS02) | (0<<CS01) | (1<<CS00);
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
; 0000 012C TCNT0=0x00;
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
; 0000 012D OCR0=0x4D;
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
; 0000 012E 
; 0000 012F // Timer/Counter 1 initialization
; 0000 0130 // Clock source: System Clock
; 0000 0131 // Clock value: 31.250 kHz
; 0000 0132 // Mode: CTC top=OCR1A
; 0000 0133 // OC1A output: Disconnected
; 0000 0134 // OC1B output: Disconnected
; 0000 0135 // Noise Canceler: Off
; 0000 0136 // Input Capture on Falling Edge
; 0000 0137 // Timer Period: 1 s
; 0000 0138 // Timer1 Overflow Interrupt: Off
; 0000 0139 // Input Capture Interrupt: Off
; 0000 013A // Compare A Match Interrupt: On
; 0000 013B // Compare B Match Interrupt: On
; 0000 013C TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
;PCODE: $000001F3 VOL: 0
;PCODE: $000001F4 VOL: 0
; 0000 013D TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (1<<WGM12) | (1<<CS12) | (0<<CS11) | (0<<CS10);
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
; 0000 013E TCNT1H=0x00;
;PCODE: $000001F7 VOL: 0
;PCODE: $000001F8 VOL: 0
; 0000 013F TCNT1L=0x00;
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
; 0000 0140 ICR1H=0x00;
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
; 0000 0141 ICR1L=0x00;
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
; 0000 0142 OCR1AH=0x7A;
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
; 0000 0143 OCR1AL=0x11;
;PCODE: $00000201 VOL: 0
;PCODE: $00000202 VOL: 0
; 0000 0144 OCR1BH=0x00;
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
; 0000 0145 OCR1BL=0x00;
;PCODE: $00000205 VOL: 0
;PCODE: $00000206 VOL: 0
; 0000 0146 
; 0000 0147 // Timer/Counter 2 initialization
; 0000 0148 // Clock source: System Clock
; 0000 0149 // Clock value: 7.813 kHz
; 0000 014A // Mode: CTC top=OCR2A
; 0000 014B // OC2 output: Disconnected
; 0000 014C // Timer Period: 0.128 ms
; 0000 014D ASSR=0<<AS2;
;PCODE: $00000207 VOL: 0
;PCODE: $00000208 VOL: 0
; 0000 014E TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (1<<CTC2) | (1<<CS22) | (1<<CS21) | (1<<CS20);
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
; 0000 014F TCNT2=0x00;
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
; 0000 0150 OCR2=0x4D;
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
; 0000 0151 
; 0000 0152 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0153 TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (1<<OCIE1A) | (1<<OCIE1B) | (0<<TOIE1) | (1<<OCIE0) | (0<<TOIE0);
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
; 0000 0154 
; 0000 0155 
; 0000 0156  // Read minutes input from keypad
; 0000 0157 // Global enable interrupts
; 0000 0158 #asm("sei")
;PCODE: $00000211 VOL: 0
	sei
;PCODE: $00000212 VOL: 0
; 0000 0159 while (1)
;PCODE: $00000213 VOL: 0
; 0000 015A       {
; 0000 015B       // Place your code here
; 0000 015C 
; 0000 015D //      key = read_keypad();
; 0000 015E       PORTC=  ~(segments[input]);
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
; 0000 015F       //display_on_seven_segment(key);
; 0000 0160 
; 0000 0161       }
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
; 0000 0162 }
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
;PCODE: $0000021F VOL: 0
;
;//int read_keypad()
;//{
;//    // Read input from keypad and return the pressed key
;//    // Define keypad layout (assuming a 4x4 matrix)
;//    char keypad_layout[4][4] = {
;//        {'/', '9', '8', '7'},
;//        {'x', '6', '5', '4'},
;//        {'-', '3', '2', '1'},
;//        {'+', '=', '0', 'c'}
;//    };
;//
;//    // Loop through each ROW and check for key press
;//
;//
;//
;//    }
;   // }
;
;    // No key pressed, input = null character
;   // return '0';
;
;
;
;void display_on_seven_segment(int number) {
; 0000 017B void display_on_seven_segment(int number) {
;PCODE: $00000220 VOL: 0
;PCODE: $00000221 VOL: 0
; 0000 017C 
; 0000 017D     // Display the given number on the seven segment display
; 0000 017E     // Define the segments for each digit (assuming common cathode display)
; 0000 017F     const int segments[] =
; 0000 0180      {
; 0000 0181         // 0bGFEDCBA
; 0000 0182         0x40, // 0
; 0000 0183         0x79, // 1
; 0000 0184         0x24, // 2
; 0000 0185         0x30, // 3
; 0000 0186         0x19, // 4
; 0000 0187         0x12, // 5
; 0000 0188         0x02, // 6
; 0000 0189         0x78, // 7
; 0000 018A         0x00, // 8
; 0000 018B         0x10 // 9
; 0000 018C     };
; 0000 018D 
; 0000 018E 
; 0000 018F 
; 0000 0190     // Extract digits from the number
; 0000 0191      digit[1] = number / 10;
;PCODE: $00000222 VOL: 0
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 0
;PCODE: $00000227 VOL: 0
;	number -> Y+20
;	segments -> Y+0
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 0
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
; 0000 0192      digit[2] = number % 10;
;PCODE: $0000022D VOL: 0
;PCODE: $0000022E VOL: 0
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
;PCODE: $00000231 VOL: 0
; 0000 0193 
; 0000 0194      //PORTC = ~(segments[digit[i]]);
; 0000 0195 }
;PCODE: $00000232 VOL: 0
;PCODE: $00000233 VOL: 0
;PCODE: $00000234 VOL: 0
