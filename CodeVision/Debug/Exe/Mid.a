;/*******************************************************
;This program was created by the
;CodeWizardAVR V3.14 Advanced
;Automatic Program Generator
;© Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 5/27/2024
;Author  :
;Company :
;Comments:
;
;
;Chip type               : ATmega32
;Program type            : Application
;AVR Core Clock frequency: 8.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 512
;*******************************************************/
;
;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;
;// Declare your global variables here
;int seg[]={0x40,0x79,0x24,0x30,0x19,0x12,0x02,0x78,0x00,0x10};

	.DSEG
;//int seg[]={0x78,0x00,0x10,0,0x19,0x12,0x02,0,0x79,0x24,0x30,0,0,0x40,0,0};  //7,8,9,/,4,5,6,x,1,2,3,-,c,0,=,+
;char out;
;char determine();
;int input=0;
;char ref[]= {
;            0b00000001,
;            0b00000010,
;            0b00000100,
;            0b00001000
;            };                      //for refreshing rows
;char keys[]= {                      //based on keypad model we use
;              '/', '9', '8', '7',
;              'x', '6', '5', '4',
;              '-', '3', '2', '1',
;              '+', '=', '0', 'c'
;              };
;char keypad();
;int LightDancer();
;
;#define col0    PINB.0
;#define col1    PINB.1
;#define col2    PINB.2
;#define col3    PINB.3
;
;// Timer1 overflow interrupt service routine
;interrupt [TIM1_OVF] void timer1_ovf_isr(void)
; 0000 0037 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0038 // Reinitialize Timer1 value
; 0000 0039 TCNT1H=0x85EE >> 8;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 003A TCNT1L=0x85EE & 0xff;
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 003B // Place your code here
; 0000 003C }
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;
;// Timer1 output compare A interrupt service routine
;interrupt [TIM1_COMPA] void timer1_compa_isr(void)
; 0000 0040 {
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0041 // Place your code here
; 0000 0042 
; 0000 0043 }
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;
;// Timer1 output compare B interrupt service routine
;interrupt [TIM1_COMPB] void timer1_compb_isr(void)
; 0000 0047 {
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0048 // Place your code here
; 0000 0049 
; 0000 004A }
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;
;// Timer2 overflow interrupt service routine
;interrupt [TIM2_OVF] void timer2_ovf_isr(void)
; 0000 004E {
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 004F // Reinitialize Timer2 value
; 0000 0050 TCNT2=0xB2;
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 0051 // Place your code here
; 0000 0052 
; 0000 0053 }
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;// Timer2 output compare interrupt service routine
;interrupt [TIM2_COMP] void timer2_comp_isr(void)     //segment refresh
; 0000 0056 {
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0057 // Place your code here
; 0000 0058 
; 0000 0059 }
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;void main(void)
; 0000 005B {
;PCODE: $0000002C VOL: 0
; 0000 005C // Declare your local variables here
; 0000 005D int b=0;
; 0000 005E // Input/Output Ports initialization
; 0000 005F 
; 0000 0060 // Function: PORT A,C,D : output, pulldown
; 0000 0061 DDRA= 0xFF;     DDRC=0xFF;      DDRD=0xFF;
;	b -> R16,R17
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 0062 PORTA= 0x00;    PORTC= 0x00;    PORTD=0x00;
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 0063 
; 0000 0064 // Port B initialization
; 0000 0065 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Oin Bit2=in Bit1=in Bit0=in
; 0000 0066 DDRB=(1<<DDB7) | (1<<DDB6) | (1<<DDB5) | (1<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 0067 // State: Bit7=0 Bit6=0 Bit5=0 Bit4=1 Bit3=1 Bit2=1 Bit1=1 Bit0=1
; 0000 0068 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (1<<PORTB3) | (1<<PORTB2) | (1<<PORTB1) | (1<<PORTB0);
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 0069 
; 0000 006A 
; 0000 006B // Timer/Counter 1 initialization
; 0000 006C TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 006D TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (1<<WGM12) | (1<<CS12) | (0<<CS11) | (0<<CS10);
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 006E TCNT1H=0x85;
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 006F TCNT1L=0xEE;
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 0070 ICR1H=0x00;
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 0071 ICR1L=0x00;
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 0072 OCR1AH=0x7A;
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 0073 OCR1AL=0x11;
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 0074 OCR1BH=0x00;
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 0075 OCR1BL=0x00;
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 0076 
; 0000 0077 
; 0000 0078 // Timer/Counter 2 initialization
; 0000 0079 // Clock source: System Clock
; 0000 007A // Clock value: 7.813 kHz
; 0000 007B // Mode: CTC top=OCR2A
; 0000 007C // OC2 output: Disconnected
; 0000 007D // Timer Period: 0.128 ms
; 0000 007E ASSR=0<<AS2;
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 007F TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (1<<CTC2) | (1<<CS22) | (1<<CS21) | (1<<CS20);
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 0080 TCNT2=0xB2;
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 0081 OCR2=0x4D;
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 0082 
; 0000 0083 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0084 TIMSK=(1<<OCIE2) | (1<<TOIE2) | (0<<TICIE1) | (1<<OCIE1A) | (1<<OCIE1B) | (1<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 0085 
; 0000 0086 
; 0000 0087 // Global enable interrupts
; 0000 0088 #asm("sei")
;PCODE: $0000005D VOL: 0
	sei
;PCODE: $0000005E VOL: 0
; 0000 0089 
; 0000 008A while (1)
;PCODE: $0000005F VOL: 0
; 0000 008B       {
; 0000 008C       // Place your code here
; 0000 008D       out   = keypad();
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 008E       PORTC = ~seg [out];
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 008F //      LightDancer();
; 0000 0090       }
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 0091 }
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;
;//	int LightDancer()
;//	{
;//		int a;
;//		char led[]= {
;//			0b10000000,
;//			0b01000000,
;//			0b00100000,
;//			0b00010000,
;//			0b00001000,
;//			0b00000100,
;//			0b00000010,
;//			0b00000001};
;//
;//		for (a=0;a<=7;a++)
;//		{
;//			PORTB=led[a];
;//			delay_ms(100);
;//		};
;//		for (a=6;a>=0;a--)
;//		{
;//			PORTC=led[a];
;//			delay_ms(100);
;//		};
;//	}
;
;    char keypad()
; 0000 00AD     {
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 00AE         while(1)
;PCODE: $00000071 VOL: 0
; 0000 00AF         {
; 0000 00B0            int row=0, col=-1,val=-2;
; 0000 00B1            for (row = 0; row<4; row++)
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;	row -> Y+4
;	col -> Y+2
;	val -> Y+0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0000 00B2            {
; 0000 00B3            PORTA = ~ref[row];
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
; 0000 00B4               if(col0 == 0)
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0000 00B5                {
; 0000 00B6                   while(col0 == 0);
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0000 00B7                   col = 0;
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
; 0000 00B8                   break;
;PCODE: $00000099 VOL: 0
; 0000 00B9                }
; 0000 00BA               if(col1 == 0)
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
; 0000 00BB                {
; 0000 00BC                   while(col1 == 0);
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
; 0000 00BD                   col = 1;
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
; 0000 00BE                   break;
;PCODE: $000000A6 VOL: 0
; 0000 00BF                }
; 0000 00C0                if(col2 == 0)
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
; 0000 00C1                {
; 0000 00C2                   while(col2 == 0);
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
; 0000 00C3                   col = 2;
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
; 0000 00C4                   break;
;PCODE: $000000B3 VOL: 0
; 0000 00C5                }
; 0000 00C6               if(col3 == 0)
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0000 00C7                {
; 0000 00C8                   while(col3 == 0);
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
; 0000 00C9                   col = 3;
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
; 0000 00CA                   break;
;PCODE: $000000C0 VOL: 0
; 0000 00CB                }
; 0000 00CC               }
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
; 0000 00CD                if (col != -1) //if key was pressed
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
; 0000 00CE                {
; 0000 00CF                  val= row*4 + col;
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
; 0000 00D0 //                if (val != 0 && val != 1 && val != 3 && val != 4 && val != 8 && val != 12)
; 0000 00D1 //                {
; 0000 00D2 //                   PORTC = ~seg [(row-1)*3 - (col-1)];
; 0000 00D3 //                }
; 0000 00D4                 //PORTC = ~seg [val];
; 0000 00D5                 PIND.0 = 1;
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
; 0000 00D6 
; 0000 00D7                 switch (val) {
;PCODE: $000000D2 VOL: 0
; 0000 00D8                 case 0:
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
; 0000 00D9                     input  = 7;
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
; 0000 00DA                 break;
;PCODE: $000000D7 VOL: 0
; 0000 00DB                 case 1:
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
; 0000 00DC                     input  = 8;
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
; 0000 00DD                 break;
;PCODE: $000000DD VOL: 0
; 0000 00DE                 case 2:
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
; 0000 00DF                     input  = 9;
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
; 0000 00E0                 break;
;PCODE: $000000E3 VOL: 0
; 0000 00E1                 case 4:
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
; 0000 00E2                     input  = 4;
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
; 0000 00E3                 break;
;PCODE: $000000E9 VOL: 0
; 0000 00E4                 case 5:
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
; 0000 00E5                     input  = 5;
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
; 0000 00E6                 break;
;PCODE: $000000EF VOL: 0
; 0000 00E7                 case 6:
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
; 0000 00E8                     input  = 6;
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
; 0000 00E9                 break;
;PCODE: $000000F5 VOL: 0
; 0000 00EA                 case 8:
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
; 0000 00EB                     input  = 1;
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
; 0000 00EC                 break;
;PCODE: $000000FB VOL: 0
; 0000 00ED                 case 9:
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
; 0000 00EE                     input  = 2;
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
; 0000 00EF                 break;
;PCODE: $00000101 VOL: 0
; 0000 00F0                 case 10:
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
; 0000 00F1                     input  = 3;
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
; 0000 00F2                 break;
;PCODE: $00000107 VOL: 0
; 0000 00F3                 case 12:
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
; 0000 00F4                     input  = 0;
;PCODE: $0000010B VOL: 0
; 0000 00F5                 break;
;PCODE: $0000010C VOL: 0
; 0000 00F6                }
;PCODE: $0000010D VOL: 0
; 0000 00F7 
; 0000 00F8                return input;
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
; 0000 00F9 
; 0000 00FA         }
; 0000 00FB     }
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
; 0000 00FC }
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;
;//   void detrmine(int c)
;//    {  int input = 0;
;//        switch (c) {
;//        case 0:
;//            input  = 7;
;//        break;
;//        case 1:
;//            input  = 8;
;//        break;
;//        case 2:
;//            input  = 9;
;//        break;
;//        case 4:
;//            input  = 4;
;//        break;
;//        case 5:
;//            input  = 5;
;//        break;
;//        case 6:
;//            input  = 6;
;//        break;
;//        case 8:
;//            input  = 1;
;//        break;
;//        case 9:
;//            input  = 2;
;//        break;
;//        case 10:
;//            input  = 3;
;//        break;
;//        case 12:
;//            input  = 0;
;//        break;
;//        return input;
;//        };
;//
;//    }
